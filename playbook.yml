## UBUNTU
- hosts: test_ubuntu

  vars:
    ubuntu: ubuntu.thanos.my.id

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install NGINX and PHP
      apt:
        pkg:
        - nginx
        - php8.1-fpm
        - php8.1-common

    - name: start php8.1-fpm
      service:
        name: php8.1-fpm
        state: started

    - name: Allow all access to tcp port 80
      ufw:
        rule: allow
        port: 80
        proto: tcp

    - name: Creates directory /var/www/ubuntu.thanos.my.id
      file:
        path: /var/www/{{ ubuntu }}
        state: directory
        owner: root
        group: root
        mode: 0775
        recurse: yes

    - name: Creates directory sites-available, sites-enabled
      file:
        path: /etc/nginx/{{ item }}
        state: directory
        owner: root
        group: root
        mode: 0775
      with_items: ["sites-available", "sites-enabled"]

    - name: Create and Setting Virtual Host
      copy:
        dest: /etc/nginx/sites-available/{{ ubuntu }}
        content: |
          server {
            listen 80;
            server_name {{ ubuntu }};
            root /var/www/{{ ubuntu }};
            index index.html index.htm index.php;
            location / {
              try_files $uri $uri/ =404;
            }
            location ~ \.php$ {
              include snippets/fastcgi-php.conf;
              fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
            }
            location ~ /\.ht {
              deny all;
            }
          }

    - name: Create symbolic link
      file:
        src: /etc/nginx/sites-available/{{ ubuntu }}
        dest: /etc/nginx/sites-enabled/{{ ubuntu }}
        state: link
        force: yes

    - name: Create and Setting Info PHP
      copy:
        dest: /var/www/{{ ubuntu }}/index.php
        content: |
          <?php

          // Show all information, defaults to INFO_ALL
          phpinfo();

          // Show just the module information.
          // phpinfo(8) yields identical results.
          phpinfo(INFO_MODULES);

          ?>

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

## CENTOS
- hosts: test_centos

  vars:
    centos: centos.thanos.my.id
    mysrc: "/etc/nginx/nginx.conf"
    mydst: "/etc/nginx/nginx.conf.bak"

  tasks:
    - name: Install NGINX and PHP
      yum:
        pkg:
        - nginx
        - php-fpm
        - php-common

    - name: start php-fpm
      service:
        name: php-fpm
        state: started

    - name: Creates directory /usr/share/nginx/centos.thanos.my.id
      file:
        path: /usr/share/nginx/{{ centos }}
        state: directory
        owner: root
        group: root
        mode: 0775
        recurse: yes

    - name: Creates directory sites-available, sites-enabled
      file:
        path: /etc/nginx/{{ item }}
        state: directory
        owner: root
        group: root
        mode: 0775
      with_items: ["sites-available", "sites-enabled"]

    ## Backup /etc/nginx/nginx.conf.bak
    - name: Check if file exists
      ansible.builtin.stat:
        path: "{{ mysrc }}"
      register: check_file_name

    - name: print debug
      ansible.builtin.debug:
        var: check_file_name

    - name: Copy file with new name
      ansible.builtin.copy:
        remote_src: true
        src: "{{ mysrc }}"
        dest: "{{ mydst }}"
      when: check_file_name.stat.exists

    - name: Remove old file
      ansible.builtin.file:
        path: "{{ mysrc }}"
        state: absent
      when: check_file_name.stat.exists

    - name: Create new setting /etc/nginx/nginx.conf
      copy:
        dest: /etc/nginx/nginx.conf
        content: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;
          include /usr/share/nginx/modules/*.conf;
          events {
              worker_connections 1024;
          }
          http {
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';
              access_log  /var/log/nginx/access.log  main;
              sendfile               on;
              tcp_nopush             on;
              tcp_nodelay            on;
              keepalive_timeout      65;
              types_hash_max_size    4096;
              include                /etc/nginx/mime.types;
              default_type           application/octet-stream;
              include                /etc/nginx/conf.d/*.conf;
              include                /etc/nginx/sites-enabled/*.conf;
          }

    - name: Create and Setting Virtual Host
      copy:
        dest: /etc/nginx/sites-available/{{ centos }}.conf
        content: |
          server {
            listen 80;
            server_name {{ centos }};
            root /usr/share/nginx/{{ centos }};
            index index.html index.htm index.php;
            location / {
              try_files $uri $uri/ =404;
            }
            location ~ [^/]\.php(/|$) {
              fastcgi_split_path_info ^(.+?\.php)(/.*)$;
              fastcgi_pass unix:/var/run/php-fpm/www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
            }
            location ~ /\.ht {
              deny all;
            }
          }

    - name: Create symbolic link
      file:
        src: /etc/nginx/sites-available/{{ centos }}.conf
        dest: /etc/nginx/sites-enabled/{{ centos }}.conf
        state: link
        force: yes

    - name: Create and Setting Info PHP
      copy:
        dest: /usr/share/nginx/{{ centos }}/index.php
        content: |
          <?php

          // Show all information, defaults to INFO_ALL
          phpinfo();

          // Show just the module information.
          // phpinfo(8) yields identical results.
          phpinfo(INFO_MODULES);

          ?>

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
